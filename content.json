{"meta":{"title":"AntsMoveBrick 的博客","subtitle":null,"description":null,"author":"AMB","url":"http://yoursite.com","root":"/"},"pages":[{"title":"[object Object]","date":"2019-05-17T12:20:45.153Z","updated":"2019-05-17T12:20:45.153Z","comments":true,"path":"exampleSite/scaffolds/leetcode.html","permalink":"http://yoursite.com/exampleSite/scaffolds/leetcode.html","excerpt":"","text":""},{"title":"[object Object]","date":"2019-05-17T12:20:45.153Z","updated":"2019-05-17T12:20:45.153Z","comments":true,"path":"exampleSite/scaffolds/draft.html","permalink":"http://yoursite.com/exampleSite/scaffolds/draft.html","excerpt":"","text":""},{"title":"[object Object]","date":"2019-05-17T12:20:45.153Z","updated":"2019-05-17T12:20:45.153Z","comments":true,"path":"exampleSite/scaffolds/portfolio-slim.html","permalink":"http://yoursite.com/exampleSite/scaffolds/portfolio-slim.html","excerpt":"","text":""},{"title":"[object Object]","date":"2019-05-17T12:20:45.169Z","updated":"2019-05-17T12:20:45.169Z","comments":true,"path":"exampleSite/scaffolds/post.html","permalink":"http://yoursite.com/exampleSite/scaffolds/post.html","excerpt":"","text":""},{"title":"","date":"2019-05-17T12:20:45.309Z","updated":"2019-05-17T12:20:45.309Z","comments":true,"path":"exampleSite/source/js/arsnippet.js","permalink":"http://yoursite.com/exampleSite/source/js/arsnippet.js","excerpt":"","text":""},{"title":"404: Not Found","date":"2019-05-17T12:20:45.169Z","updated":"2019-05-17T12:20:45.169Z","comments":true,"path":"exampleSite/source/404/index.html","permalink":"http://yoursite.com/exampleSite/source/404/index.html","excerpt":"","text":""},{"title":"Archives","date":"2019-05-17T12:20:45.262Z","updated":"2019-05-17T12:20:45.262Z","comments":false,"path":"exampleSite/source/archives/index.html","permalink":"http://yoursite.com/exampleSite/source/archives/index.html","excerpt":"","text":""},{"title":"","date":"2019-05-17T12:20:45.262Z","updated":"2019-05-17T12:20:45.262Z","comments":true,"path":"exampleSite/source/css/arsnippet.css","permalink":"http://yoursite.com/exampleSite/source/css/arsnippet.css","excerpt":"","text":".subscribe { text-align: center; background-color: lightsalmon; padding:10px; } .subscribe a{ color: white; } .subscribe a:hover{ color: lightsalmon; padding: 10px; background-color: white; font-family: cursive }"},{"title":"list-category-leetcode layout","date":"2019-05-17T12:20:45.309Z","updated":"2019-05-17T12:20:45.309Z","comments":true,"path":"exampleSite/source/leetcode-category/index.html","permalink":"http://yoursite.com/exampleSite/source/leetcode-category/index.html","excerpt":"","text":""},{"title":"list-tag-leetcode layout","date":"2019-05-17T12:20:45.309Z","updated":"2019-05-17T12:20:45.309Z","comments":true,"path":"exampleSite/source/leetcode-tag/index.html","permalink":"http://yoursite.com/exampleSite/source/leetcode-tag/index.html","excerpt":"","text":""},{"title":"Support","date":"2019-05-17T12:20:45.325Z","updated":"2019-05-17T12:20:45.325Z","comments":true,"path":"exampleSite/source/support/index.html","permalink":"http://yoursite.com/exampleSite/source/support/index.html","excerpt":"","text":"❤️ ❤️ ❤️ ❤️ ❤️ ❤️ ❤️ ❤️ ❤️ Thank you for choosing A-RSnippet theme. Before creating the A-RSnippet theme, I was angry that themes were not easy to modify and source code was hard to understand. Now I will not do it anymore. I spent several days to finish the first version. Writing documentation required more days. It taught me that every theme requires a big amount of time to complete and every authors’ effort should be respected. Simplicity does not mean easy or not complicated. NexT theme seems to conform to minimalism. It has lots of functionalities and customization. It is not easy. The goal of the theme is to contain as many features as possible. Hence, this is not a simple theme. For example, there will be more than one layout to present project portfolio. Please submit your layout if it is different from mine. There are more features on the way. It will take me a lot of time. If you like A-RSnippet theme and/or appreciate my time dedicated to the theme, please give a tip to support the development of the theme. There are three ways: 1. Patreon (recurring, monthly)GitHub issue section is for issues or future features only. All seek-for-help activity should take place in the forum or Discord. For people who don’t donate through Patreon: If you ask a question via Discord, you must use English and write a post in English in the forum to show how you solve the problem. You must send me the link to the post. Otherwise, I will not answer your question(s) in the future. For people who donate through Patreon: You will automatically join in a private Discord chatroom. You can ask me any question there. There are some benefits: You can suggest any feature you want. I will create a poll of a list of features to be developed after each release. The polls are shown only to you. The top items will be taken care of first. You can ask me questions in Chinese or English in the private channel on Discord. You will not be obliged to write a post in English in the forum. I will do it for you. 2. itch (one-time) 3. Gumroad (one-time) Loading…"},{"title":"Tags","date":"2019-05-17T12:20:45.325Z","updated":"2019-05-17T12:20:45.325Z","comments":true,"path":"exampleSite/source/tags/index.html","permalink":"http://yoursite.com/exampleSite/source/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"从零开始搭建一个简单的基于webpack的vue开发环境","slug":"从零开始搭建一个简单的基于webpack的vue开发环境","date":"2019-05-16T08:27:08.000Z","updated":"2019-05-17T12:21:20.524Z","comments":true,"path":"2019/05/16/从零开始搭建一个简单的基于webpack的vue开发环境/","link":"","permalink":"http://yoursite.com/2019/05/16/从零开始搭建一个简单的基于webpack的vue开发环境/","excerpt":"","text":"搭建可以参考这个链接（webpack3.0版本），里面写的很详细，我在此对webpack4.0版本的改动做一些相应的调整。https://segmentfault.com/a/1190000012789253#articleHeader6 差异：webpack4更改了一些东西1、对html文本的处理webpack.config.js123456789101112131415// 引入var VueLoaderPlugin = require(&apos;vue-loader/lib/plugin&apos;);var HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);module.exports = &#123; // 配置插件 plugins: [ new VueLoaderPlugin(), new webpack.HotModuleReplacementPlugin(), // 生成一个热更新的模块对象 new HtmlWebpackPlugin(&#123; //创建一个在内存中生成html页面的插件 template: path.join(__dirname,&apos;index.html&apos;), // 指定模板页面，根据指定的路径生成内存中的页面 filename: &apos;index.html&apos; //指定内存中生成的页面的名称 &#125;) ],&#125; 2、打包压缩：只在package.json中修改 1234&quot;scripts&quot;: &#123; &quot;dev&quot;: &quot;cross-env NODE_ENV=development webpack-dev-server --hot&quot;, &quot;build&quot;: &quot;webpack --mode production&quot; // 打包压缩 &#125;","categories":[],"tags":[]},{"title":"事件委托","slug":"事件委托","date":"2019-05-16T08:19:20.691Z","updated":"2019-05-17T12:21:20.705Z","comments":true,"path":"2019/05/16/事件委托/","link":"","permalink":"http://yoursite.com/2019/05/16/事件委托/","excerpt":"","text":"原文链接：http://caibaojian.com/eventdelegate.html 事件委托通俗地来讲，就是把一个元素响应事件（click、keydown……）的函数委托到另一个元素；·一般来讲，会把一个或者一组元素的事件委托到它的父层或者更外层元素上，真正绑定事件的是外层元素，当事件响应到需要绑定的元素上时，会通过事件冒泡机制从而触发它的外层元素的绑定事件上，然后在外层元素上去执行函数。举个例子，比如一个宿舍的同学同时快递到了，一种方法就是他们都傻傻地一个个去领取，还有一种方法就是把这件事情委托给宿舍长，让一个人出去拿好所有快递，然后再根据收件人一一分发给每个宿舍同学；在这里，取快递就是一个事件，每个同学指的是需要响应事件的 DOM 元素，而出去统一领取快递的宿舍长就是代理的元素，所以真正绑定事件的是这个元素，按照收件人分发快递的过程就是在事件执行中，需要判断当前响应的事件应该匹配到被代理元素中的哪一个或者哪几个。 优点1、减少内存消耗2，动态绑定事件注：使用’addEventListener‘ 添加事件时，事件的on不写 例如: onclick : ,addEventListener(‘click’,function(){}); onmousover : ,addEventListener(‘mousover ‘,function(){}); js事件委托实例：html: 12345&lt;ul id=&quot;list&quot;&gt; &lt;li&gt;1&lt;/li&gt; &lt;li&gt;2&lt;/li&gt; &lt;li&gt;3&lt;/li&gt;&lt;/ul&gt; js:123456789101112var list = document.getElementById(&apos;list&apos;);list.addEventListener(&apos;click&apos;,function(e)&#123; // 兼容性处理 var event = e || window.event; var target = event.target || event.srcElement; // toLocaleLowerCase 转小写 if(target.nodeName.toLocaleLowerCase === &apos;li&apos;)&#123; target.style.backgroundColor = &apos;red&apos;; &#125;&#125;) jquery:12345678$(&apos;#list&apos;).on(&apos;click&apos;,&apos;li&apos;,function(event)&#123; var target = $(event.target); // toLowerCase() 大写转小写 if(target.nodeName.toLowerCase() === &apos;li&apos;)&#123; target.style.backgroundColor = &apos;red&apos;; &#125;&#125;) js封装:12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt; &lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt; &lt;input class=&quot;text&quot; type=&quot;text&quot; value=&quot;&quot; placeholder=&quot;请输入内容&quot; /&gt; &lt;input class=&quot;btn&quot; type=&quot;button&quot; value=&quot;点击添加&quot; /&gt; &lt;/div&gt;&lt;/body&gt;&lt;script&gt; var btn = document.getElementsByClassName(&quot;btn&quot;)[0]; var ul = document.getElementsByTagName(&apos;ul&apos;)[0]; // 点击添加li btn.onclick = function() &#123; var text = document.getElementsByClassName(&apos;text&apos;)[0].value; var li = document.createElement(&apos;li&apos;); li.innerHTML = text; var ul = document.getElementsByTagName(&apos;ul&apos;)[0]; ul.appendChild(li); document.getElementsByClassName(&apos;text&apos;)[0].value = null; &#125; eventDelegate(ul, &apos;li&apos;, &apos;mouseover&apos;, function() &#123; this.style.backgroundColor = &apos;red&apos;; &#125;) eventDelegate(ul, &apos;li&apos;, &apos;mouseout&apos;, function() &#123; this.style.backgroundColor = &apos;#fff&apos;; &#125;)// 事件委托封装 function eventDelegate(parentSelector, targetSelector, events, foo) &#123; // 触发执行的函数 function triFunction(e) &#123; // 兼容性处理 var event = e || window.event; // 获取到目标阶段指向的元素 var target = event.target || event.srcElement; // 获取到代理事件的函数 var currentTarget = event.currentTarget; // 处理 matches 的兼容性 if (!Element.prototype.matches) &#123; Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function(s) &#123; var matches = (this.document || this.ownerDocument).querySelectorAll(s), i = matches.length; while (--i &gt;= 0 &amp;&amp; matches.item(i) !== this) &#123;&#125; return i &gt; -1; &#125;; &#125; // 遍历外层并且匹配 while (target !== currentTarget) &#123; // 判断是否匹配到我们所需要的元素上 if (target.matches(targetSelector)) &#123; var sTarget = target; // 执行绑定的函数，注意 this foo.call(sTarget, Array.prototype.slice.call(arguments)) &#125; target = target.parentNode; &#125; &#125; // 如果是一个事件,一个父级元素 parentSelector.addEventListener(events, triFunction); // 多个事件,多个父级元素 // 如果有多个事件的话需要全部一一绑定事件 events.split(&apos;.&apos;).forEach(function(evt) &#123; // 多个父层元素的话也需要一一绑定 Array.prototype.slice.call(document.querySelectorAll(parentSelector)).forEach(function($p) &#123; $p.addEventListener(evt, triFunction); &#125;); &#125;); &#125;&lt;/script&gt;&lt;/html&gt;","categories":[],"tags":[]},{"title":"闭包","slug":"闭包","date":"2019-05-14T02:34:21.000Z","updated":"2019-05-17T12:21:20.523Z","comments":true,"path":"2019/05/14/闭包/","link":"","permalink":"http://yoursite.com/2019/05/14/闭包/","excerpt":"","text":"闭包的定义 当一个函数的返回值是另外一个函数，而返回的那个函数如果调用了其父函数内部的其它变量，如果返回的这个函数在外部被执行，就产生了闭包。 表现形式 使函数外部能够调用函数内部定义的变量。 实例 根据作用域链的规则，底层作用域没有声明的变量，会向上一级找，找到就返回，没找到就一直找，直到window的变量，没有就返回undefined。这里明显count 是函数内部的flag2 的那个count 。 1234567891011var count=10; //全局作用域 标记为flag1function add()&#123; var count=0; //函数全局作用域 标记为flag2 return function()&#123; count+=1; //函数的内部作用域 alert(count); &#125;&#125;var s = add()s();//输出1s();//输出2 变量的作用域 要理解闭包，首先必须理解Javascript特殊的变量作用域。 变量的作用域分类：全局变量和局部变量。 特点：1、函数内部可以读取函数外部的全局变量；在函数外部无法读取函数内的局部变量。2、函数内部声明变量的时候，一定要使用var命令。如果不用的话，你实际上声明了一个全局变量！ 使用闭包的注意点 滥用闭包，会造成内存泄漏：由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能导致内存泄露。解决方法是，在退出函数之前，将不使用的局部变量全部删除。 会改变父函数内部变量的值。所以，如果你把父函数当作对象（object）使用，把闭包当作它的公用方法（Public Method），把内部变量当作它的私有属性（private value），这时一定要小心，不要随便改变父函数内部变量的值。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-05-13T08:27:34.931Z","updated":"2019-05-14T02:51:33.239Z","comments":true,"path":"2019/05/13/hello-world/","link":"","permalink":"http://yoursite.com/2019/05/13/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}